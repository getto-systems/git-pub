#!/bin/bash

git_purge_main(){
  local parent_remote

  git_purge_parse_options "$@"

  local current_branch
  local parent_branch

  git fetch "${parent_remote}" --prune

  current_branch=$(git rev-parse --abbrev-ref HEAD)
  parent_branch=$(git parent)

  git_purge_check_full_merged

  git_purge_exec
}
git_purge_parse_options(){
  parent_remote=origin
}
git_purge_check_full_merged(){
  if [ -n "$(git log "${parent_remote}/${parent_branch}..")" ]; then
    git_purge_error not_full_merged
  fi
}
git_purge_exec(){
  git checkout "${parent_branch}" &&
  git merge "${parent_remote}/${parent_branch}" &&
  git branch -d "${current_branch}"
}

git_purge_error(){
  git_purge_error_message_${1} >&2
  exit 1
}

# error messages
git_purge_error_message_not_full_merged(){
  echo "${current_branch} is not merged into ${parent_remote}/${parent_branch}."
  echo "aborted."
}

git_purge_main "$@"
